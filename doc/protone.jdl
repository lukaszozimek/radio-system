entity TraBlockConfiguration{
day CorDayOfWeekEnum
name String
length Long
startBlock Long
stopBlock Long
sequence Integer

}
entity TraEmission{
    sequence Integer
     timeStart Long
     timeStop Long

}

enum CorDayOfWeekEnum {
   DW_MONDAY,
   DW_TUESDAY,
   DW_WEDNESDAY,
   DW_THURSDAY,
   DW_FRIDAY,
   DW_SATURDAY,
   DW_SUNDAY
}
entity TraBlock{
    name String
    length Long
    sequence Integer
    startBlock Long
    stopBlock Long
}
entity TraMediaPlan{
    name String
}
entity TraMediaPlanPlaylist{
    playlistDate LocalDate
}
entity TraPlaylist{
    playlistDate LocalDate
}
entity CrmAccount {
 	shortName String
    externalId1 String
    externalId2 String
    name String
    paymentDelay Integer
    vatNumber String

}

entity CrmContact{
 	shortName String
    externalId1 String
    externalId2 String
    paymentDate LocalDate
    name String
    paymentDelay Integer
    vatNumber String
}
entity CorDictionary {
    name String
    description String
    seqNumber Long

}
entity CorDictionaryType{
  name String
}

entity CorModule{
  name String
}

entity CrmLead {
 	name String
    shortname String
    description String
}


entity CrmOpportunity{
    name String
    shortName String
  	lastTry LocalDate
    closeDate LocalDate
    probability Integer
}

entity CrmTask{
    subject String
    activityDate LocalDate
    activityLength Long
  	comment String
}

entity CrmTaskComment{
	comment String,
}

entity CorAddress {
	street String required maxlength(100)
	number String required maxlength(100)
	postalCode String required maxlength(100)
	city String required maxlength(100)
	country String required maxlength(100)
}

entity CorChannel {
	shortcut String required maxlength(3)
	name String required maxlength(100)
    description String
}

entity CorContact {
	contact String required maxlength(100)
    contactType CorContactTypeEnum required
}

enum CorContactTypeEnum {
	CT_EMAIL,
    CT_PHONE,
    CT_OTHER
}


entity CorPropertyKey {
	key String required
}

entity CorPropertyValue {
	value String required
}

entity CorNetwork {
	shortcut String required maxlength(100)
	name String required maxlength(100)
		active Boolean
    description String
}

entity CorPerson {
	firstName String required maxlength(100)
	lastName String required maxlength(100)
	description String
}

entity CorTag {
	tag String required maxlength(100)
}


entity CorTax{
	name String,
    value String,
    validFrom LocalDate
    validTo LocalDate
    active Boolean
}

entity CorNotification{
	description String
}


entity CorCountry{
   		name String
  		shortName String
  }
entity CorCurrency{
   	name String
 	symbol String
  	delimiter String
	shortName String
  }

entity CfgMarkerConfiguration {
	name String required maxlength(100)
	displayName String required maxlength(100)
	color String required maxlength(100)
	keyboardShortcut String required maxlength(100)
	type LibMarkerTypeEnum required
}
entity CfgExternalSystemLog{
	name String
    lenght Integer
    logColumn CfgLogTypeEnum
    delimiter String
    columnSequence Integer
}
enum CfgLogTypeEnum{
	LT_MUSIC,
    LT_COMMERCIAL
}

entity LibAlbum {
	albumType LibAlbumTypeEnum required
    name String required maxlength(100)
    releaseDate LocalDate
    description String
}

enum LibAlbumTypeEnum {
	AT_ALBUM,
    AT_SINGLE,
    AT_COMPILATION,
    AT_OTHER
}

entity LibArtist {
	name String required maxlength(100)
    type LibArtistTypeEnum
    description String
}

enum LibArtistTypeEnum {
	AT_PERSON,
    AT_BAND,
    AT_CHOIR,
    AT_OTHER
}

entity LibMediaItem {
	idx String required
    name String required
    itemType LibItemTypeEnum required
    length Double required
    state LibItemStateEnum required
    startCommand String
    stopCommand String
    description String
}

enum LibItemTypeEnum {
	IT_AUDIO,
    IT_VIDEO,
    IT_IMAGE,
    IT_DOCUMENT,
    IT_COMMAND,
    IT_OTHER
}

enum LibItemStateEnum
{
	IS_NEW,
    IS_POSTPROCESS,
    IS_ENABLED,
    IS_DISABLED,
    IS_ARCHIVED,
    IS_DELETED,
    IS_ERROR,
    IS_OTHER
}

entity LibLabel {
	name String required maxlength(100)
    description String
}

entity LibMarker {
	markerType LibMarkerTypeEnum required
	name String  required maxlength(100)
	startTime Long required
}

enum LibMarkerTypeEnum {
	MT_BASIC,
	MT_INTRO,
	MT_FADE,
	MT_HOOK,
	MT_LOOP,
	MT_CUSTOM
}

entity LibLibrary {
	prefix String required maxlength(1)
    shortcut String required maxlength(3)
    name String required
    counter Long required
    description String
}


entity LibTrack {
    discNo Integer required
    TrackNo Integer required
	name String required maxlength(100)
    length Long required
    description String
}

entity LibCloudObject {
	uuid String required maxlength(100)
    objectType LibObjectTypeEnum
    originalName String required maxlength(100)
    contentType String required maxlength(100)
	size Long required
    original Boolean
    hash String required maxlength(100)
    createDate ZonedDateTime
}


enum LibObjectTypeEnum {
	OT_IMAGE,
    OT_AUDIO,
    OT_VIDEO,
    OT_DOCUMENT,
    OT_FILE
}

entity LibImageObject {
	width Integer
    height Integer
    imageSize LibImageSizeEnum required
}

enum LibImageSizeEnum {
	IS_ORIGINAL,
    IS_LARGE,
    IS_NORMAL,
    IS_SMALL
}

entity LibAudioObject {
	length Double required
    biTrate Integer required
    codec String required maxlength(100)
    quality LibAudioQualityEnum
}

enum LibAudioQualityEnum {
	AQ_ORIGINAL,
    AQ_LOSSLESS,
    AQ_HIGH,
    AQ_NORMAL,
    AQ_LOW,
    AQ_OTHER
}

entity LibVideoObject {
	width Integer
    height Integer
	length Long
    biTrate Integer
    codec String
    quality LibVideoQualityEnum
    aspecTratio LibAspecTratioEnum
}

entity LibDocumentObject {

}
enum LibVideoQualityEnum {
    VQ_2160P,
    VQ_1440P,
    VQ_1080P,
    VQ_720P,
    VQ_480P,
    VQ_360P,
    VQ_240P,
    VQ_144P,
    VQ_OTHER
}

enum LibAspecTratioEnum {
	AR_4BY3,
    AR_16BY9,
    AR_ULTRAWIDE,
    AR_OTHER
}

entity LibImageItem {
    name String
    publicUrl String
}

entity LibFileItem {
	idx String required maxlength(15)
    name String required maxlength(100)
    type LibFileTypeEnum
}

enum LibFileTypeEnum {
	FT_ROOT,
	FT_DIRECTORY,
    FT_FILE
}

entity SchTemplate {
	name String required maxlength(100)
}

entity SchPlaylist {
    date LocalDate  required
    dimYear Integer
    dimMonth Integer
    dimDay Integer
}

entity SchBlock {
	seq Integer required
	name String required maxlength(100)
    type SchBlockTypeEnum

    startType SchStartTypeEnum
    relativeDelay Long

    scheduledStartTime ZonedDateTime
    scheduledEndTime ZonedDateTime
    scheduledLength Long

    startTime ZonedDateTime
    endTime ZonedDateTime
    length Long

	dimYear Integer
    dimMonth Integer
    dimDay Integer
    dimHour Integer
    dimMinute Integer
    dimSecond Integer
}

enum SchStartTypeEnum {
	ST_FREE,
    ST_RELATIVE,
    ST_ABSOLUTE
}

enum SchBlockTypeEnum {
	BT_DAY,
    BT_BAND,
    BT_HOUR,
    BT_NEWS,
    BT_COMMERCIAL,
    BT_PROGRAM,
    BT_LIVE,
    BT_OTHER
}

entity SchEmission {
	seq Integer required
	name String required maxlength(100)

    startTime ZonedDateTime
    endTime ZonedDateTime
    length Long

	dimYear Integer
    dimMonth Integer
    dimDay Integer
    dimHour Integer
    dimMinute Integer
    dimSecond Integer
}

entity TraAdvertisement {
    name String required maxlength(100)
    description String
}

entity TraDiscount {
	validFrom LocalDate
    validTo LocalDate
	discount Long
}


entity TraInvoice {
    paid Boolean
    price BigDecimal
    paymentDay LocalDate
}

entity TraCampaign {
	name String required maxlength(100)
	shortName String
	startDate LocalDate
	endDate LocalDate
	prize Long
}

entity TraOrder{
	name String required maxlength(100)
 	startDate LocalDate
 	endDate LocalDate
	calculatedPrize Long
}

entity TraPrice {
    name String required maxlength(100)
    validFrom LocalDate
    validTo LocalDate
    price BigDecimal required
    baseLength Integer
    priceAlternative BigDecimal required
}



entity CorUser{
  login String
  password_hash  String
  first_name String
  last_name String
  email String
  image_url String
  activated Boolean
  lang_key String
  activation_key String
  reset_key String
  created_by String
  created_date LocalDate
  reset_date ZonedDateTime
  last_modified_by String
  last_modified_date LocalDate
}

entity CorAuthority{
    name String required
}
entity CorUserAuthority{

}

relationship OneToOne {

    TraAdvertisement{mediaItem} to LibMediaItem,
    LibImageObject{cloudObject} to LibCloudObject,
    LibAudioObject{cloudObject} to LibCloudObject,
    LibVideoObject{cloudObject} to LibCloudObject,
    LibDocumentObject{cloudObject} to LibCloudObject,
    TraMediaPlan {mediaItem} to LibMediaItem,
    CorCountry{tax} to CorTax,
    CorCountry{currnecy} to CorCurrency,
    CrmContact{addres} to CorAddress,
    CrmContact{country} to CorCountry,
    CrmContact{person} to CorPerson ,
    TraPrice {currency} to CorCurrency,

    CrmAccount{person} to CorPerson,
    CrmAccount{addres} to CorAddress,
    CrmLead{person} to CorPerson,
    CrmLead{addres} to CorAddress
}
relationship ManyToOne {
    CorDictionary {dictionaryType}  to CorDictionaryType,
    CorDictionary {module} to CorModule,
    CorUserAuthority{user} to CorUser{authorities},
    CorUserAuthority{authority} to CorAuthority,
    SchTemplate{channel} to CorChannel,
    SchPlaylist{channel} to CorChannel,

    LibMediaItem{Library} to LibLibrary,

    SchEmission{mediaItem} to LibMediaItem,

    LibLibrary{network} to CorNetwork,
 	CorChannel{network} to CorNetwork,

    SchBlock{playlist} to SchPlaylist,
    SchBlock{template} to SchTemplate,

    SchBlock{parentBlock} to SchBlock,
    SchEmission{block} to SchBlock,

    LibMediaItem{label} to LibLabel,
    LibMediaItem{artist} to LibArtist,
    LibMediaItem{album} to LibAlbum,
    LibMediaItem{Track} to LibTrack,
    LibMediaItem{network} to CorNetwork,

    LibAlbum{label} to LibLabel,
    LibTrack{album} to LibAlbum,
    LibTrack{artist} to LibArtist,
    LibAlbum{artist} to LibArtist,
    LibLabel{network} to CorNetwork,
    LibArtist{network} to CorNetwork,
    LibAlbum{network} to CorNetwork,
    LibTrack{network} to CorNetwork,

    CorPropertyKey{network} to CorNetwork,
    CorPropertyValue{propertyKey} to CorPropertyKey,
	CfgExternalSystemLog{network} to CorNetwork,
    CfgExternalSystemLog{channel} to CorChannel,
    CorTag{network} to CorNetwork,
    CorContact{network} to CorNetwork,
    CorContact {person} to CorPerson{contacts},
    CorPerson{network} to CorNetwork,
    CorAddress{network} to CorNetwork,

    LibMediaItem{Library} to LibLibrary,
    LibImageItem{Library} to LibLibrary,
    LibImageItem{network} to CorNetwork,
    LibFileItem{Library} to LibLibrary,

    CorPerson{author} to LibMediaItem {author},
    CorPerson{composer} to LibMediaItem {composer},
    LibMarker{mediaItem} to LibMediaItem {markers},

    CorTag{tags} to LibMediaItem {tags} ,
    CorPropertyValue{libItemPropertyValue} to LibMediaItem {properites},

    LibAudioObject{mediaItem} to LibMediaItem,
    LibVideoObject{mediaItem} to LibMediaItem,
    LibDocumentObject{mediaItem} to LibMediaItem,

    LibImageObject{mediaItem} to LibMediaItem,
    LibAudioObject{network} to CorNetwork,
    LibVideoObject{network} to CorNetwork,
    LibDocumentObject{network} to CorNetwork,

    LibImageObject{network} to CorNetwork,
    LibImageItem{network}    to CorNetwork,
    LibImageObject{imageItem} to LibImageItem,
    LibFileItem{parentFile} to LibFileItem,

    CfgMarkerConfiguration{network} to CorNetwork,

    LibCloudObject{network} to CorNetwork,
    LibCloudObject{createdBy} to CorUser,


    CorDictionary{network} to CorNetwork,
    CorCurrency {network} to CorNetwork,

    CrmContact {network} to CorNetwork,

    CorCountry {network} to CorNetwork,
    CorTax{network} to CorNetwork,

    CrmContact{range} to CorDictionary,
    CrmContact{size} to CorDictionary,
    CrmContact{industry} to  CorDictionary,
    CrmContact{area} to CorDictionary,

    CrmContact {keeper} to CorUser,
    CrmContact{status} to CorDictionary,


    TraDiscount {network} to CorNetwork,
    TraPrice {network} to CorNetwork,
    TraAdvertisement{customer} to CrmAccount,
    TraAdvertisement{network} to CorNetwork,

    TraAdvertisement{industry} to CorDictionary,
    TraAdvertisement {type} to CorDictionary,
    TraAdvertisement{customer} to CrmAccount,

    TraCampaign{customer} to CrmAccount,
    TraCampaign{network} to CorNetwork,
    TraCampaign{status} to CorDictionary,
    TraCampaign{price} to TraPrice,

    TraInvoice {customer} to CrmAccount,
    TraInvoice{network} to CorNetwork,
    TraInvoice{status} to CorDictionary,

    TraOrder{customer} to CrmAccount,
    TraOrder{price} to TraPrice,
    TraOrder{network} to CorNetwork,
    TraOrder{status} to CorDictionary,

    CrmAccount{network} to CorNetwork,
    CrmAccount{discount} to TraDiscount,
    CrmAccount {keeper} to CorUser,
    CrmAccount{country} to CorCountry,
    CrmAccount{range} to CorDictionary,
    CrmAccount{size} to CorDictionary,
    CrmAccount{industry} to  CorDictionary,
    CrmAccount{area} to CorDictionary,

    CrmLead{leadStatus} to CorDictionary,
    CrmLead{leadSource} to CorDictionary,
    CrmLead {keeper} to CorUser,
    CrmLead{industry} to CorDictionary,
    CrmLead{area} to CorDictionary,
    CrmLead{network} to CorNetwork,

    CrmOpportunity {stage} to CorDictionary,
    CrmOpportunity {keeper} to CorUser,
    CrmOpportunity {contact} to CrmContact,
    CrmOpportunity {account} to CrmAccount,
    CrmOpportunity {lead} to CrmLead,
    CrmOpportunity {network} to CorNetwork,

    CrmTask{createdBy} to CorUser,
    CrmTask{assignedTo} to CorUser,
    CrmTask{status} to CorDictionary,
    CrmTask{network} to CorNetwork,
    TraOrder{advertisment}to TraAdvertisement,
    TraEmission {order} to TraOrder {emissions},
    TraOrder {campaign} to TraCampaign {orders} ,
    TraOrder {invoice} to TraInvoice {orders},


    CrmTask {opportunity} to CrmOpportunity{tasks},
    CrmTask {contact} to CrmContact {tasks},
    CrmTask {account} to CrmAccount {tasks},
    CrmTask {lead} to CrmLead {tasks},
    CrmTask {tasks} to CrmTask,
    CrmTaskComment{network} to CorNetwork,
    CrmTaskComment{taskComment} to CrmTask {comments},
    CrmTaskComment{createdBy} to CorUser,
    CorChannel{network} to CorNetwork,
    CorNotification{user} to CorUser,

    TraBlockConfiguration {network} to CorNetwork,
    TraBlockConfiguration {blockStartSound} to LibMediaItem,
    TraBlockConfiguration {blockEndSound} to LibMediaItem,
    TraEmission {network} to CorNetwork,
    TraBlock {network} to CorNetwork,
    TraBlock {blockStartSound} to LibMediaItem,
    TraBlock {blockEndSound} to LibMediaItem,
    TraPlaylist {network} to CorNetwork,
    TraBlockConfiguration {channel} to CorChannel,
    TraEmission {channel} to CorChannel,
    TraBlock {channel} to CorChannel,
    TraPlaylist {channel} to CorChannel,

    TraEmission {advertiment} to TraAdvertisement,
    TraEmission {block} to TraBlock{emissions},

    TraMediaPlanPlaylist {mediaPlan} to TraMediaPlan{playlists},
    TraMediaPlan {channel} to CorChannel,
    TraMediaPlan {account} to CrmAccount,
    TraMediaPlanPlaylist {channel} to CorChannel,
    TraMediaPlan {network} to CorNetwork,
    TraMediaPlanPlaylist {network} to CorNetwork
}
relationship ManyToMany {

     CorUser{channel} to CorChannel{channelUsers},
     CorUser{network} to CorNetwork{networkUsers}
}
dto * with mapstruct except LibCloudObject
microservice * with protones
