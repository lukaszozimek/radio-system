
entity CRMLead {
 	name String
    shortname String,
    description String
}
entity CRMLeadSource{
	name String
}
entity CRMLeadStatus{
	name String
}
entity CRMTask{
    subject String
    activityDate LocalDate
    activityLength Long
  	comment String
}
entity CRMContact{
    idNumber1 String
    idNumber2 String
    name String
    paymentDate LocalDate
    vatNumber String
  }
entity CRMContactStatus{
	name String,
    description String
}
entity CRMOpportunity{
    name String
  	lastTry LocalDate
    closeDate LocalDate
  }
entity CRMAccount {
 	 idNumber1 String
    idNumber2 String
    name String
    paymentDate LocalDate
    size Integer
    vatNumber String
}
entity CRMStage{
	name String,
    description String
}

entity CRMTaskComment{
	comment String,
}
entity CORArea{
	name String
    description String
}
entity CORStatus{
	name String
    description String
}
entity CORSize {
	name String
    description String
}
entity CORRange{
	name String
    description String
}
entity CORTax{
	name String,
    value String,
    active Boolean
}
entity CORNetwork {
	shortcut String required maxlength(100)
	name String required maxlength(100)
    description String
}

entity CORChannel {
	prefix String required maxlength(3)
	name String required maxlength(100)
    description String
}
entity CORNotification{
	description String
}

entity CORSubscription{
	name String,
    price Long
    subscription CORCSubscriptionTypeEnum

}
enum CORCSubscriptionTypeEnum {
	ST_CRM,
    ST_TRAFFIC,
    ST_PLAYOUT,
    ST_LIBRARY
}
entity CORSubscriptionOwner{
name String

}
entity LibLibrary {
	prefix String required maxlength(1)
	idxLength Integer required
    shortcut String required maxlength(3)
    name String required maxlength(100)
    counter Long required
    counterType CORCounterTypeEnum
    libraryType LIBObjectTypeEnum required
    description String
}

enum CORCounterTypeEnum {
	CT_COUNTER,
    CT_PREFIX_COUNTER,
    CT_SHORTCUT_COUNTER
}
entity CORCountry{
 networkId Long
  name String
  shortName String
  }
entity CORCurrency{
    networkId Long
   	name String
 	symbol String
  	delimiter String
	shortName String
  }
entity CORPerson {
	firstName String required maxlength(100)
	lastName String required maxlength(100)
	description String
}

entity CORAddress {
	street String required maxlength(100)
	number String required maxlength(100)
	postalCode String required maxlength(100)
	city String required maxlength(100)
	country String required maxlength(100)
}

entity CORContact {
	contact String required maxlength(100)
    contactType CORContactTypeEnum required
}

enum CORContactTypeEnum {
	CT_EMAIL,
    CT_PHONE,
    CT_OTHER
}

entity CORPropertyKey {
	key String required maxlength(100)
}

entity CORPropertyValue {
	value String required maxlength(100)
}

entity CORTag {
	tag String required maxlength(100)
}


entity CFGMarkerConfiguration {
	name String required maxlength(100)
	displayName String required maxlength(100)
	color String required maxlength(100)
	keyboardShortcut String required maxlength(100)
	type LIBMarkerTypeEnum required
}

entity CFGTaskStatus{
	name String
}

entity CFGTaskRelation{
	name String
}
entity CFGStage{
	name String
}

entity LIBArtist {
	name String required maxlength(100)
    type LIBArtistTypeEnum
    description String
}

enum LIBArtistTypeEnum {
	AT_PERSON,
    AT_BAND,
    AT_CHOIR,
    AT_OTHER
}

entity LIBLabel {
	name String required maxlength(100)
    description String
}

entity LIBAlbum {
	albumType LIBAlbumTypeEnum required
    name String required maxlength(100)
    releaseDate LocalDate
    description String
}

enum LIBAlbumTypeEnum {
	AT_ALBUM,
    AT_SINGLE,
    AT_COMPILATION,
    AT_OTHER
}

entity LIBTrack {
    discNo Integer required
    trackNo Integer required
	name String required maxlength(100)
    length Long required
    description String
}

entity LIBCloudObject {
	uuid String required maxlength(100)
    objectType ObjectTypeEnum
    originalName String required maxlength(100)
    contentType String required maxlength(100)
	size Long required
    original Boolean
    hash String required maxlength(100)
    createDate ZonedDateTime
}

enum LIBObjectTypeEnum {
	OT_IMAGE,
    OT_AUDIO,
    OT_VIDEO,
    OT_FILE
}

entity LIBImageObject {
	width Integer required
    height Integer required
    imageSize LIBImageSizeEnum required
}

enum LIBImageSizeEnum {
	IS_ORIGINAL,
    IS_LARGE,
    IS_NORMAL,
    IS_SMALL
}

entity LIBAudioObject {
	length Long required
    bitrate Integer required
    codec String required maxlength(100)
    quality LIBAudioQualityEnum
}

enum LIBAudioQualityEnum {
	AQ_ORIGINAL,
    AQ_LOSSLESS,
    AQ_HIGH,
    AQ_NORMAL,
    AQ_LOW,
    AQ_OTHER
}

entity LIBVideoObject {
	width Integer required
    height Integer required
	length Long required
    bitrate Integer required
    codec String required maxlength(100)
    quality LIBVideoQualityEnum
    aspectRatio LIBAspectRatioEnum
}

enum LIBVideoQualityEnum {
    VQ_2160P,
    VQ_1440P,
    VQ_1080P,
    VQ_720P,
    VQ_480P,
    VQ_360P,
    VQ_240P,
    VQ_144P,
    VQ_OTHER
}

enum LIBAspectRatioEnum {
	AR_4BY3,
    AR_16BY9,
    AR_OTHER
}

entity LIBFileObject {
}

entity LIBMediaItem {
	idx String required maxlength(15)
    name String required maxlength(100)
    itemType LIBItemTypeEnum required
    length Long required
    state LIBItemStateEnum required
    command String
    description String
}

enum LIBItemTypeEnum {
	IT_AUDIO,
    IT_VIDEO,
    IT_COMMAND,
    IT_OTHER
}

enum LIBItemStateEnum
{
	IS_NEW,
    IS_POSTPROCESS,
    IS_ENABLED,
    IS_DISABLED,
    IS_ARCHIVED,
    IS_DELETED,
    IS_ERROR,
    IS_OTHER
}

entity LIBImageItem {
	idx String required maxlength(15)
    name String required maxlength(100)
}

entity LIBFileItem {
	idx String required maxlength(15)
    name String required maxlength(100)
    type LIBFileTypeEnum
}

enum LIBFileTypeEnum {
	FT_ROOT,
	FT_DIRECTORY,
    FT_FILE
}

entity LIBMarker {
	markerType LIBMarkerTypeEnum required
	name String  required maxlength(100)
	startTime Integer required
}

enum LIBMarkerTypeEnum {
	MT_BASIC,
	MT_INTRO,
	MT_FADE,
	MT_HOOK,
	MT_LOOP,
	MT_CUSTOM
}

entity SCHBlockPrice {
	calculatedPrice BigDecimal
}

entity SCHEmissionOrder {
	calculatedPrice BigDecimal
}

entity SCHBlock {
	seq Integer required
	name String required maxlength(100)
    type SCHBlockTypeEnum required
    startTime ZonedDateTime required
    startType SCHStartTypeEnum required
    relativeDelay Long
    endTime ZonedDateTime required
    length Long required
	dimYear Integer required
    dimMonth Integer required
    dimDay Integer required
    dimHour Integer required
    dimMinute Integer required
    dimSecond Integer required
}

entity SCHTemplate {
	seq Integer required
	name String required maxlength(100)
    type SCHBlockTypeEnum  required
    startTime ZonedDateTime required
    startType SCHStartTypeEnum required
    relativeDelay Long
    endTime ZonedDateTime required
    length Long required
}

entity SCHEmission {
	seq Integer required
	startTime ZonedDateTime required
    startType SCHStartTypeEnum required
    relativeDelay Long
    endTime ZonedDateTime required
    length Long required
    finished Boolean required
}

enum SCHStartTypeEnum {
	ST_FREE,
    ST_RELATIVE,
    ST_ABSOLUTE
}

enum SCHBlockTypeEnum {
	BT_BAND,
    BT_HOUR,
    BT_NEWS,
    BT_COMMERCIAL,
    BT_PROGRAM,
    BT_LIVE,
    BT_OTHER
}

entity TRAStatus{
	name String
    description String
}
entity TRAAdvertisement {
    name String required maxlength(100)
    description String
}


entity TRADiscount {
	validFrom LocalDate
    validTo LocalDate
	discount Long
}

entity TRAIndustry {
	name String required maxlength(100)
}

entity TRAInvoice {
    paid Boolean
    paymentDay LocalDate
}

entity TRACampaign {
	name String required maxlength(100)
	startDate LocalDate
	endDate LocalDate
	prize Long
}

entity TRAOrder{
	name String required maxlength(100)
 	startDate LocalDate
 	endDate LocalDate
	calculatedPrize Long
}

entity TRAPrice {
    name String required maxlength(100)
    validFrom LocalDate
    validTo LocalDate
    price BigDecimal required
    baseLength Integer
    priceAlternative BigDecimal required
  }
entity TRAAdvertismentType {
  name String,
  description String
}



relationship OneToOne {
	CORAddress {network} to CORNetwork,
    TRAIndustry{network} to CORNetwork,
    TRAPrice {network} to CORNetwork,
    CORRange {network} to CORNetwork,
    CORSize {network} to CORNetwork,
    CORPerson {network} to CORNetwork,
    CORArea {network} to CORNetwork,
    CRMContactStatus {network} to CORNetwork,
    CRMLeadStatus {network} to CORNetwork,
    CRMLeadSource {network} to CORNetwork,
    CRMStage{network} to CORNetwork,
    User {network} to CORNetwork,
    LIBMarker{network} to CORNetwork,
    CORPropertyKey{network} to CORNetwork ,
    CORPropertyValue{network} to CORNetwork ,
    CFGTaskStatus {network} to CORNetwork ,

    TRAAdvertisement{libitem} to LIBMediaItem,
 	TRAAdvertisement{customer} to CRMAccount,
 	TRAAdvertisement{industry} to TRAIndustry,
 	TRAAdvertisement{network} to CORNetwork,
    TRAAdvertisement {type} to TRAAdvertismentType,

    TRACampaign{customer} to CRMAccount,
 	TRACampaign{price} to TRAPrice,
 	TRACampaign{network} to CORNetwork,

    TRAInvoice {customer} to CRMAccount,
	TRAInvoice{network} to CORNetwork,

    TRAOrder{customer} to CRMAccount,
    TRAOrder{campaign} to TRACampaign,
    TRAOrder{price} to TRAPrice,
	TRAOrder{network} to CORNetwork,

    CRMContact{addres} to CORAddress,
    CRMContact{range} to CORRange,
    CRMContact{size} to CORSize,
   	CRMContact{industry} to  TRAIndustry,
    CRMContact{area} to CORArea,
    CRMContact{person} to CORPerson,
    CRMContact {opiekun} to User,
    CRMContact{network} to CORNetwork,
    CRMContact{status} to CRMContactStatus,

    CRMAccount{addres} to CORAddress,
    CRMAccount{range} to CORRange,
    CRMAccount{size} to CORSize,
   	CRMAccount{industry} to  TRAIndustry,
    CRMAccount{area} to CORArea,
    CRMAccount{person} to CORPerson,
    CRMAccount {opiekun} to User,
    CRMAccount{discount} to TRADiscount,
    CRMAccount{network} to CORNetwork,

    CRMLead{leadStatus} to CRMLeadStatus,
    CRMLead{leadSource} to CRMLeadSource,
    CRMLead{addres} to CORAddress,
    CRMLead {opiekun} to User,
    CRMLead{industry} to TRAIndustry,
    CRMLead{area} to CORArea,
    CRMLead{person} to CORPerson,
    CRMLead{network} to CORNetwork,

    CRMOpportunity {stage} to CRMStage,
    CRMOpportunity {opiekun} to User,
    CRMOpportunity {contact} to CRMContact,
    CRMOpportunity {account} to CRMAccount,
    CRMOpportunity {lead} to CRMLead,
    CRMOpportunity {network} to CORNetwork,

    CRMTask{createdBy} to User,
    CRMTask{assignedTo} to User,
    CRMTask{status} to CFGTaskStatus,
    CRMTask{network} to CORNetwork,

    LIBMediaItem{album} to LIBAlbum,
    LIBMediaItem{artist} to LIBArtist,
	LIBMediaItem{composer} to LIBLabel,
	LIBMediaItem {network} to CORNetwork,
    LIBMediaItem {item} to LibLibrary ,

    SCHEmission{mediaItem} to  LIBMediaItem,
    SCHEmission{channel} to CORChannel,
    SCHEmission {network} to CORNetwork,
    SCHBlock {network} to CORNetwork,
    LibLibrary {network} to CORNetwork,

    CORSubscriptionOwner {network} to CORNetwork,
    CORSubscriptionOwner {network} to User

}

relationship OneToMany {

    TRACampaign {emissions} to SCHEmission,
	TRAInvoice {orders} to TRAOrder,

    CRMContact{tasks} to CRMTask,
    CRMAccount{opportunity} to CRMOpportunity,
    CRMAccount{network} to CRMTask,
    CRMLead{network} to CRMTask,
    CRMTask{tasks} to CRMTask,
    CRMTask{comment} to CRMTaskComment,

    CORSubscriptionOwner {subscriptions} to  CORSubscription,

    LIBMediaItem{author} to CORPerson,
	LIBMediaItem{composer} to CORPerson,
	LIBMediaItem{markers} to LIBMarker,
	LIBMediaItem{property} to CORPropertyKey,
	LIBMediaItem{tags} to CORTag,
 	LibLibrary {channel} to CORChannel,
	LibLibrary {user} to User,
    LibLibrary {item} to LIBMediaItem,

    CORPerson{personContacts} to CORContact,
    CORNetwork {users} to User,
    CORNetwork{channel} to CORChannel,
    CORChannel {users} to User,
    CORPropertyKey{values} to CORPropertyValue,
    User {channel} to CORChannel,
    User {notifications} to CORNotification,

    SCHBlock {emission} to SCHEmission,
    SCHBlock {block} to SCHBlock



}
relationship ManyToOne{
  CRMAccount{orders} to TRAOrder,
  CRMAccount{campaigns} to TRACampaign,
  CRMAccount{invoices} to TRAInvoice,
  CRMAccount{invoices} to TRAAdvertisement,
  CORChannel {user} to User,
  CORNetwork {network} to User

}
paginate * with infinite-scroll
microservice * with protone
